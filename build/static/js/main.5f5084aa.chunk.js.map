{"version":3,"sources":["services/login.js","services/tviits.js","reducers/activeUserReducer.js","store.js","services/actions.js","components/DeleteTviitModalButton.js","components/LikeTviitButton.js","components/Avatar.js","components/Tviit.js","components/Feed.js","services/users.js","components/Userpage.js","components/Login.js","services/search.js","components/SearchResults.js","components/SignUpPage.js","services/upload.js","components/UserSettingsPage.js","components/NotFound.js","App.js","index.js"],"names":["baseUrl","process","loginService","login","credentials","a","axios","post","response","data","tviitService","getAll","offset","get","postTviit","tviit","token","config","headers","Authorization","deleteTviit","tviitId","delete","setActiveUser","user","dispatch","type","setDeletedTviit","likeTviit","unlikeTviit","activeUserReducer","state","action","tviitDeleted","newLikes","actions","likes","concat","filteredLikes","filter","reducer","combineReducers","activeUser","store","createStore","composeWithDevTools","applyMiddleware","thunk","actionService","postAction","deleteAction","DeleteTviitModalButton","useDispatch","useSelector","useState","show","setShow","handleClose","handleDeleteTviit","console","log","Button","variant","onClick","Modal","onHide","Header","closeButton","Title","Body","Footer","LikeTviitButton","handleLikeTviit","actionType","targetTviitId","handleUnlikeTviit","margin","marginTop","includes","className","style","disabled","Avatar","userId","size","avatarSrc","Image","src","width","height","roundedCircle","Tviit","Card","Container","fluid","Row","Col","xs","name","to","username","Link","id","Text","content","Date","postDate","toString","Feed","feed","setFeed","noMoreTviits","setNoMoreTviits","isSearching","setIsSearching","useEffect","tviits","statusCode","status","error","handleTviitGetting","handleFetchMoreTviits","length","Set","sort","b","Spinner","animation","Alert","map","filteredTviits","block","as","role","aria-hidden","userService","getUser","signUp","userInfo","modifyUserInfo","patch","Userpage","useParams","userpage","setUserpage","tviitingFailed","setTviitingFailed","handleUserGetting","handleTviiting","event","preventDefault","target","elements","tviitingTextArea","value","tviitToPost","tviitToAdd","newUserpage","errorReason","bio","Form","onSubmit","Group","controlId","Label","Control","rows","Login","isLoggingIn","setLoggingIn","showLoginFail","setShowLoginFail","handleLogin","formUsername","password","formPassword","window","localStorage","setItem","JSON","stringify","sm","md","placeholder","searchService","getSearchResults","queryString","encodeURIComponent","SearchResults","URLSearchParams","useLocation","search","searchResults","setSearchResults","handleSearching","SignUpPage","isSigningUp","setSigningUp","signUpFailed","setSignUpFailed","handleSignUp","formName","passwordVerify","formPasswordVerify","createdUser","uploadService","postAvatar","avatarFile","formData","FormData","append","UserSettingsPage","isChanging","setChanging","changeFailed","setChangeFailed","selectedFiles","setSelectedFiles","handlePasswordChanging","oldPassword","formOldPassword","newPassword","formNewPassword","newPasswordVerify","formNewPasswordVerify","userModInfo","handleNameChanging","newName","formNewName","handleBioChanging","newBio","formNewBio","handleAvatarChanging","newAvatar","Accordion","defaultActiveKey","Toggle","eventKey","Collapse","encType","File","label","onChange","e","files","NotFound","withRouter","history","useHistory","loggedUserJSON","getItem","parse","handleCheckingLocalStorage","handleSelect","push","clear","Navbar","collapseOnSelect","expand","bg","color","aria-controls","Nav","href","NavDropdown","onSelect","title","Item","Divider","inline","searchString","formNavBarSearch","FormControl","path","exact","Jumbotron","component","getFullYear","ReactDOM","render","document","getElementById"],"mappings":"kQAEMA,EAAO,UAAMC,GAAN,cAWEC,EAJM,CACnBC,MANS,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACWC,IAAMC,KAAKP,EAASI,GAD/B,cACNI,EADM,yBAELA,EAASC,MAFJ,2CAAH,uDCFLT,EAAO,UAAMC,GAAN,eA+BES,EANM,CACnBC,OAxBU,uCAAG,0CAAAN,EAAA,6DAAOO,EAAP,+BAAgB,EAAhB,SACUN,IAAMO,IAAN,UAAab,EAAb,mBAA+BY,IADzC,cACPJ,EADO,yBAENA,EAASC,MAFH,2CAAH,qDAyBVK,UApBa,uCAAG,WAAOC,EAAOC,GAAd,iBAAAX,EAAA,6DACVY,EAAS,CACbC,QAAS,CAAEC,cAAc,UAAD,OAAYH,KAFtB,SAKOV,IAAMC,KAAKP,EAASe,EAAOE,GALlC,cAKVT,EALU,yBAMTA,EAASC,MANA,2CAAH,wDAqBbW,YAZe,uCAAG,WAAOC,EAASL,GAAhB,iBAAAX,EAAA,6DACZY,EAAS,CACbC,QAAS,CAAEC,cAAc,UAAD,OAAYH,KAFpB,SAKKV,IAAMgB,OAAN,UAAgBtB,EAAhB,YAA2BqB,GAAWJ,GAL3C,cAKZT,EALY,yBAMXA,EAASC,MANE,2CAAH,yDCgCJc,EAAgB,SAACC,GAC5B,8CAAO,WAAMC,GAAN,SAAApB,EAAA,sDACLoB,EAAS,CACPC,KAAM,kBACNjB,KAAK,eACAe,KAJF,2CAAP,uDAUWG,EAAkB,SAACN,GAC9B,8CAAO,WAAMI,GAAN,SAAApB,EAAA,sDACLoB,EAAS,CACPC,KAAM,oBACNjB,KAAM,CACJY,aAJC,2CAAP,uDA6BWO,EAAY,SAACP,GACxB,8CAAO,WAAMI,GAAN,SAAApB,EAAA,sDACLoB,EAAS,CACPC,KAAM,kBACNjB,KAAM,CACJY,aAJC,2CAAP,uDAUWQ,EAAc,SAACR,GAC1B,8CAAO,WAAMI,GAAN,SAAApB,EAAA,sDACLoB,EAAS,CACPC,KAAM,oBACNjB,KAAM,CACJY,aAJC,2CAAP,uDAUaS,EA9GW,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCAChD,OAAQA,EAAON,MACf,IAAK,aAEL,IAAK,kBACH,OAAO,eAAKM,EAAOvB,MACrB,IAAK,oBACH,OAAO,2BAAKsB,GAAZ,IAAmBE,aAAcD,EAAOvB,KAAKY,UAC/C,IAAK,kBACH,IAAMa,EAAWH,EAAMI,QAAQC,MAAMC,OAAOL,EAAOvB,KAAKY,SACxD,OAAO,2BAAKU,GAAZ,IAAmBI,QAAS,CAAEC,MAAOF,KAEvC,IAAK,oBACH,IAAMI,EAAgBP,EAAMI,QAAQC,MAAMG,QAAO,SAAAlB,GAAO,OAAIA,IAAYW,EAAOvB,KAAKY,WACpF,OAAO,2BAAKU,GAAZ,IAAmBI,QAAS,CAAEC,MAAOE,KAEvC,QACE,OAAOP,ICdLS,EAAUC,0BAAgB,CAC9BC,WAAYZ,IAUCa,EAPDC,sBACZJ,EACAK,8BACEC,0BAAgBC,O,+FCXd/C,EAAO,UAAMC,GAAN,gBAoCE+C,EANO,CACpBrC,OA7BU,uCAAG,WAAOK,GAAP,iBAAAX,EAAA,6DACPY,EAAS,CACbC,QAAS,CAAEC,cAAc,UAAD,OAAYH,KAFzB,SAKUV,IAAMO,IAAIb,EAASiB,GAL7B,cAKPT,EALO,yBAMNA,EAASC,MANH,2CAAH,sDA8BVwC,WArBc,uCAAG,WAAOjB,EAAQhB,GAAf,iBAAAX,EAAA,6DACXY,EAAS,CACbC,QAAS,CAAEC,cAAc,UAAD,OAAYH,KAFrB,SAKMV,IAAMC,KAAKP,EAASgC,EAAQf,GALlC,cAKXT,EALW,yBAMVA,EAASC,MANC,2CAAH,wDAsBdyC,aAbgB,uCAAG,WAAOlB,EAAQhB,GAAf,iBAAAX,EAAA,6DACbY,EAAS,CACbR,KAAMuB,EACNd,QAAS,CAAEC,cAAc,UAAD,OAAYH,KAHnB,SAMIV,IAAMgB,OAAOtB,EAASiB,GAN1B,cAMbT,EANa,yBAOZA,EAASC,MAPG,2CAAH,yD,8EC+BH0C,EA5CgB,SAAC,GAAiB,IAAf9B,EAAc,EAAdA,QAC1BI,EAAW2B,cACXV,EAAaW,aAAY,SAAAtB,GAAK,OAAIA,EAAMW,cAFA,EAItBY,oBAAS,GAJa,mBAIvCC,EAJuC,KAIjCC,EAJiC,KAMxCC,EAAc,kBAAMD,GAAQ,IAG5BE,EAAiB,uCAAG,sBAAArD,EAAA,+EAEhBK,EAAaU,YAAYC,EAASqB,EAAW1B,OAF7B,OAGtBS,EAASE,EAAgBN,IAHH,+CAOtBsC,QAAQC,IAAI,0BAPU,wDAAH,qDAWvB,OACE,qCACE,cAACC,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAfX,kBAAMP,GAAQ,IAe7B,SACE,cAAC,IAAD,MAGF,eAACQ,EAAA,EAAD,CAAOT,KAAMA,EAAMU,OAAQR,EAA3B,UACE,cAACO,EAAA,EAAME,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACH,EAAA,EAAMI,MAAP,8BAEF,cAACJ,EAAA,EAAMK,KAAP,0DACA,eAACL,EAAA,EAAMM,OAAP,WACE,cAACT,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAASN,EAArC,oBAGA,cAACI,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAASL,EAAnC,8B,kBCwBKa,GA3DS,SAAC,GAAwB,IAAtBlD,EAAqB,EAArBA,QAASe,EAAY,EAAZA,MAC5BX,EAAW2B,cACXV,EAAaW,aAAY,SAAAtB,GAAK,OAAIA,EAAMW,cAExC8B,EAAe,uCAAG,4BAAAnE,EAAA,sEAEd2B,EAAS,CAAEyC,WAAY,OAAQC,cAAerD,GAFhC,SAGd2B,EAAcC,WAAWjB,EAAQU,EAAW1B,OAH9B,OAIpBS,EAASG,EAAUP,IAJC,gDAOpBsC,QAAQC,IAAI,wBAPQ,yDAAH,qDAWfe,EAAiB,uCAAG,4BAAAtE,EAAA,sEAEhB2B,EAAS,CAAEyC,WAAY,OAAQC,cAAerD,GAF9B,SAGhB2B,EAAcE,aAAalB,EAAQU,EAAW1B,OAH9B,OAItBS,EAASI,EAAYR,IAJC,gDAOtBsC,QAAQC,IAAI,0BAPU,yDAAH,qDAWjBgB,EAAS,CACbC,UAAW,OAGb,OAAKnC,EAAW1B,MAUZ0B,EAAWP,QAAQC,MAAM0C,SAASzD,GAElC,cAACwC,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAASY,EAAnC,SACE,sBAAKI,UAAU,gCAAf,UACE,cAAC,IAAD,CAAUA,UAAU,OAAOC,MAAOJ,IADpC,IACgDxC,OAMlD,cAACyB,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAASS,EAAnC,SACE,sBAAKO,UAAU,gCAAf,UACE,cAAC,IAAD,CAAMA,UAAU,OAAOC,MAAOJ,IAAWxC,OApB7C,cAACyB,EAAA,EAAD,CAAQC,QAAQ,UAAUmB,UAAQ,EAAlC,SACE,sBAAKF,UAAU,gCAAf,UACE,cAAC,IAAD,CAAUA,UAAU,OAAOC,MAAOJ,IADpC,IACgDxC,Q,UClCzC8C,GANA,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,KAClBC,EAAS,UAAMpF,GAAN,+BAA6DkF,GAE5E,OAAO,cAACG,GAAA,EAAD,CAAOC,IAAKF,EAAWG,MAAOJ,EAAMK,OAAQL,EAAMM,eAAa,KCiEzDC,GA9DD,SAAC,GAAe,IAAb5E,EAAY,EAAZA,MAET2B,EAAaW,aAAY,SAAAtB,GAAK,OAAIA,EAAMW,cAE9C,OACE,qCACE,eAACkD,EAAA,EAAD,WACE,cAACA,EAAA,EAAK1B,OAAN,UACE,sBAAKa,UAAU,iCAAf,UAEE,cAACc,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACE,eAACC,EAAA,EAAD,CAAKhB,UAAU,4BAAf,UACE,cAACiB,EAAA,EAAD,CAAKC,GAAG,OAAOlB,UAAU,YAAzB,SACE,cAAC,GAAD,CAAQI,OAAQpE,EAAMoE,OAAQC,KAAM,OAEtC,eAACY,EAAA,EAAD,WACE,cAACD,EAAA,EAAD,UAAK,iCAAShF,EAAMmF,SACpB,cAACH,EAAA,EAAD,UACE,cAAC,gBAAD,CAAeI,GAAE,aAAQpF,EAAMqF,UAA/B,SACE,eAACR,EAAA,EAAKS,KAAN,eAAatF,EAAMqF,wBAO7B,sBAAKrB,UAAU,4BAAf,UACGhE,EAAMqF,WAAa1D,EAAW0D,UAC7B,cAAC,GAAD,CAAiB/E,QAASN,EAAMuF,GAAIlE,MAAOrB,EAAMqB,QAElDrB,EAAMqF,WAAa1D,EAAW0D,UAC7B,cAAC,EAAD,CAAwB/E,QAASN,EAAMuF,aAO/C,cAACV,EAAA,EAAKvB,KAAN,UACE,cAACuB,EAAA,EAAKW,KAAN,UAAYxF,EAAMyF,YAGpB,cAACZ,EAAA,EAAKtB,OAAN,UACE,wBAAOS,UAAU,aAAjB,oBAAsC,IAAI0B,KAAK1F,EAAM2F,UAAUC,mBAGnE,2BCiDSC,GAhGF,WACX,IAAMlE,EAAaW,aAAY,SAAAtB,GAAK,OAAIA,EAAMW,cAD7B,EAGOY,mBAAS,MAHhB,mBAGVuD,EAHU,KAGJC,EAHI,OAIuBxD,oBAAS,GAJhC,mBAIVyD,EAJU,KAIIC,EAJJ,OAKqB1D,oBAAS,GAL9B,mBAKV2D,EALU,KAKGC,EALH,KAOjBC,qBAAU,YACgB,uCAAG,8BAAA9G,EAAA,+EAEFK,EAAaC,SAFX,OAEjByG,EAFiB,OAGvBN,EAAQM,GAHe,gDAKjBC,EAAa,KAAU7G,SAAW,KAAUA,SAAS8G,OAAS,KACpER,EAAQ,CAAES,OAAO,EAAMF,eANA,yDAAH,qDASxBG,KACC,IAEH,IAAMC,EAAqB,uCAAG,4BAAApH,EAAA,sEAE1B6G,GAAe,GAFW,SAGLxG,EAAaC,OAAOkG,EAAKa,QAHpB,OAIJ,KADhBN,EAHoB,QAIfM,OACTV,GAAgB,GAEhBF,EAAQ,YAAI,IAAIa,IAAId,EAAKxE,OAAO+E,KAAUQ,MAAK,SAACvH,EAAGwH,GAAJ,OAAUA,EAAEvB,GAAKjG,EAAEiG,OAEpEY,GAAe,GATW,gDAY1BA,GAAe,GAZW,yDAAH,qDAgB3B,IAAKL,EAAM,OACT,qBAAK9B,UAAU,cAAf,SACE,cAAC+C,EAAA,EAAD,CAASC,UAAU,SAASjE,QAAQ,cAIxC,GAAI+C,EAAKU,MACP,OACE,eAACS,EAAA,EAAD,CAAOlE,QAAQ,SAAf,oDAC0C+C,EAAKQ,WAD/C,OAOJ,GAAI3E,EAAWT,cACb4E,EAAKoB,KAAI,SAAAlH,GAAK,OAAIA,EAAMuF,MAAIxB,SAASpC,EAAWT,cAAe,CAE/D,IAAMiG,EAAiBrB,EAAKtE,QAAO,SAAAxB,GAAK,OAAIA,EAAMuF,KAAO5D,EAAWT,gBACpE6E,EAAQoB,GAGV,OACE,gCACE,yCACCrB,EAAKoB,KAAI,SAAAlH,GAAK,OACb,cAAC,GAAD,CAEEA,MAAOA,GADFA,EAAMuF,OAKf,sBAAKvB,UAAU,gCAAf,WACKgC,IAAiBE,GAClB,cAACpD,EAAA,EAAD,CAAQC,QAAQ,UACdC,QAAS0D,EACT1C,UAAU,OAFZ,8BAICgC,GAAgBE,GACjB,eAACpD,EAAA,EAAD,CAAQC,QAAQ,UAAUiB,UAAU,OAAOE,UAAQ,EAACkD,OAAK,EAAzD,UACE,cAACL,EAAA,EAAD,CACEM,GAAG,OACHL,UAAU,SACV3C,KAAK,KACLiD,KAAK,SACLC,cAAY,SAEd,sBAAMvD,UAAU,UAAhB,2BAGFgC,IAAiBE,GACjB,cAACpD,EAAA,EAAD,CAAQC,QAAQ,UACdiB,UAAU,OACVE,UAAQ,EAACkD,OAAK,EAFhB,oCC7FJnI,GAAO,UAAMC,GAAN,cA2BEsI,GANK,CAClBC,QApBW,uCAAG,WAAOpC,GAAP,6BAAA/F,EAAA,6DAAiBO,EAAjB,+BAA0B,EAA1B,SACSN,IAAMO,IAAN,UAAab,GAAb,qBAAiCoG,EAAjC,kCAAmExF,IAD5E,cACRJ,EADQ,yBAEPA,EAASC,MAFF,2CAAH,sDAqBXgI,OAhBU,uCAAG,WAAOC,GAAP,eAAArI,EAAA,sEACUC,IAAMC,KAAKP,GAAS0I,GAD9B,cACPlI,EADO,yBAENA,EAASC,MAFH,2CAAH,sDAiBVkI,eAZkB,uCAAG,WAAOD,EAAUvD,EAAQnE,GAAzB,iBAAAX,EAAA,6DACfY,EAAS,CACbC,QAAS,CAAEC,cAAc,UAAD,OAAYH,KAFjB,SAKEV,IAAMsI,MAAN,UAAe5I,GAAf,YAA0BmF,GAAUuD,EAAUzH,GALhD,cAKfT,EALe,yBAMdA,EAASC,MANK,2CAAH,2DCiJLoI,GApJE,WACf,IAAMzC,EAAW0C,cAAY1C,SACvB1D,EAAaW,aAAY,SAAAtB,GAAK,OAAIA,EAAMW,cAFzB,EAIWY,mBAAS,MAJpB,mBAIdyF,EAJc,KAIJC,EAJI,OAKuB1F,mBAAS,MALhC,mBAKd2F,EALc,KAKEC,EALF,KAoBrB,GAbA/B,qBAAU,YACe,uCAAG,8BAAA9G,EAAA,+EAEHkI,GAAYC,QAAQpC,GAFjB,OAEhB5E,EAFgB,OAGtBwH,EAAY,eAAKxH,IAHK,gDAKhB6F,EAAa,KAAU7G,SAAW,KAAUA,SAAS8G,OAAS,KACpE0B,EAAY,CAAEzB,OAAO,EAAMF,eANL,yDAAH,qDASvB8B,KACC,CAAC/C,KAEC2C,EAAU,OACb,qBAAKhE,UAAU,cAAf,SACE,cAAC+C,EAAA,EAAD,CAASC,UAAU,SAASjE,QAAQ,cAIxC,GAAIiF,EAASxB,MACX,OAA4B,MAAxBwB,EAAS1B,WAET,cAACW,EAAA,EAAD,CAAOlE,QAAQ,UAAf,iCAMA,cAACkE,EAAA,EAAD,CAAOlE,QAAQ,SAAf,mBAQN,GAAIpB,EAAW0D,WAAaA,GAC1B1D,EAAWT,cACX8G,EAAS3B,OAAOa,KAAI,SAAAlH,GAAK,OAAIA,EAAMuF,MAAIxB,SAASpC,EAAWT,cAAe,CAE1E,IAAMiG,EAAiBa,EAAS3B,OAAO7E,QAAO,SAAAxB,GAAK,OAAIA,EAAMuF,KAAO5D,EAAWT,gBAC/E+G,EAAY,2BAAKD,GAAN,IAAgB3B,OAAQc,KAGrC,IAAMkB,EAAc,uCAAG,WAAOC,GAAP,6BAAAhJ,EAAA,yDACrBgJ,EAAMC,iBACA9C,EAAU6C,EAAME,OAAOC,SAASC,iBAAiBC,MACvDL,EAAME,OAAOC,SAASC,iBAAiBC,MAAQ,GACzCC,EAAc,CAAEnD,aAElBA,EAAQkB,OAAS,GANA,0CAQGhH,EAAaI,UAAU6I,EAAajH,EAAW1B,OARlD,OAQXD,EARW,OASX6I,EATW,2BASO7I,GATP,IAScqF,SAAU1D,EAAW0D,SAAUF,KAAMxD,EAAWwD,OACzE2D,EAVW,2BAUQd,GAVR,IAUkB3B,OAAQ,CAACwC,GAAYvH,OAAO0G,EAAS3B,UACxE4B,EAAYa,GACZX,EAAkB,MAZD,kDAcX1I,EAAW,KAAUA,SACrBsJ,EAActJ,EAAWA,EAASC,KAAK8G,MAAQ,KAC/CF,EAAa7G,EAAWA,EAAS8G,OAAS,KAChD4B,EAAkB,CAAE3B,OAAO,EAAMF,aAAYyC,gBAjB5B,0DAAH,sDAuCpB,OACE,qCACE,cAACjE,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACE,eAACC,EAAA,EAAD,CAAKhB,UAAU,oDAAf,UACE,cAACiB,EAAA,EAAD,IACA,cAACA,EAAA,EAAD,CAAKC,GAAG,OAAR,SACE,eAACF,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,GAAG,OAAOlB,UAAU,YAAzB,SACE,cAAC,GAAD,CAAQI,OAAQ4D,EAAS5D,OAAQC,KAAM,OAEzC,eAACY,EAAA,EAAD,CAAKC,GAAG,OAAR,UACE,cAACF,EAAA,EAAD,UAAK,iCAAQ,6BAAKgD,EAAS7C,WAC3B,cAACH,EAAA,EAAD,UAAK,iCAAQ,mCAAMgD,EAAS3C,wBAIlC,cAACJ,EAAA,EAAD,SAGJ,cAACH,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKjB,UAAU,gCAAf,SACE,iCACE,6BACE,uBAAOA,UAAU,aAAjB,SACGgE,EAASgB,gBAQrBrH,EAAW0D,WAAaA,GAhDzB,gCACE,uBACA,eAAC4D,EAAA,EAAD,CAAMC,SAAUb,EAAhB,UACE,eAACY,EAAA,EAAKE,MAAN,CAAYC,UAAU,mBAAtB,UACE,cAACH,EAAA,EAAKI,MAAN,oBACA,cAACJ,EAAA,EAAKK,QAAN,CAAcjC,GAAG,WAAWkC,KAAM,OAEpC,cAACzG,EAAA,EAAD,CAAQC,QAAQ,UAAUpC,KAAK,SAA/B,wBA4CHuH,GAAkB,qCACjB,uBACA,eAACjB,EAAA,EAAD,CAAOlE,QAAQ,SAAf,qDAC2CmF,EAAea,YAD1D,iBACqFb,EAAe5B,WADpG,UAKF,uBACA,8BACE,8BACG0B,EAAS3B,OAAOa,KAAI,SAAAlH,GAAK,OACxB,cAAC,GAAD,CAEEA,MAAOA,GADFA,EAAMuF,eCtDViE,GArFD,WACZ,IAAM9I,EAAW2B,cACXV,EAAaW,aAAY,SAAAtB,GAAK,OAAIA,EAAMW,cAF5B,EAIkBY,oBAAS,GAJ3B,mBAIXkH,EAJW,KAIEC,EAJF,OAKwBnH,oBAAS,GALjC,mBAKXoH,EALW,KAKIC,EALJ,KAOZC,EAAW,uCAAG,WAAOvB,GAAP,uBAAAhJ,EAAA,6DAClBgJ,EAAMC,iBACNmB,GAAa,GACPrE,EAAWiD,EAAME,OAAOC,SAASqB,aAAanB,MAC9CoB,EAAWzB,EAAME,OAAOC,SAASuB,aAAarB,MACpDL,EAAME,OAAOC,SAASqB,aAAanB,MAAQ,GAC3CL,EAAME,OAAOC,SAASuB,aAAarB,MAAQ,GANzB,SASVtJ,EAAc,CAAEgG,WAAU0E,YAThB,UAUG5K,EAAaC,MAAMC,GAVtB,eAUVoB,EAVU,OAWhBwJ,OAAOC,aAAaC,QAClB,sBAAuBC,KAAKC,UAAU5J,IAZxB,UAcMwB,EAAcrC,OAAOa,EAAKR,OAdhC,QAcVmB,EAdU,OAehBV,EAASF,EAAc,2BAAKC,GAASW,KAfrB,kDAiBhBsI,GAAa,GACbE,GAAiB,GAlBD,0DAAH,sDAsBjB,OAAIjI,EAAW1B,MACN,cAAC,IAAD,CAAUmF,GAAG,MAIpB,cAACN,EAAA,EAAD,UACE,eAACE,EAAA,EAAD,CAAKhB,UAAU,4BAAf,UACE,cAACiB,EAAA,EAAD,IAEA,eAACA,EAAA,EAAD,CAAKqF,GAAI,EAAGC,GAAI,EAAhB,UACE,eAACtB,EAAA,EAAD,CAAMC,SAAUW,EAAhB,UACE,eAACZ,EAAA,EAAKE,MAAN,CAAYC,UAAU,eAAtB,UACE,cAACH,EAAA,EAAKI,MAAN,uBACA,cAACJ,EAAA,EAAKK,QAAN,CAAc3I,KAAK,OAAO6J,YAAY,gBAGxC,eAACvB,EAAA,EAAKE,MAAN,CAAYC,UAAU,eAAtB,UACE,cAACH,EAAA,EAAKI,MAAN,uBACA,cAACJ,EAAA,EAAKK,QAAN,CAAc3I,KAAK,WAAW6J,YAAY,gBAG5C,sBAAKxG,UAAU,gCAAf,WACIyF,GACA,cAAC3G,EAAA,EAAD,CAAQC,QAAQ,UAAUpC,KAAK,SAA/B,oBAKD8I,GACC,eAAC3G,EAAA,EAAD,CAAQC,QAAQ,UAAUmB,UAAQ,EAAlC,UACE,cAAC6C,EAAA,EAAD,CACEM,GAAG,OACHL,UAAU,SACV3C,KAAK,KACLiD,KAAK,SACLC,cAAY,SAEd,sBAAMvD,UAAU,UAAhB,iCAKR,uBACC2F,GACC,cAAC1C,EAAA,EAAD,CAAOlE,QAAQ,SAAf,4CAMJ,cAACkC,EAAA,EAAD,UCvFFhG,GAAO,UAAMC,GAAN,eAWEuL,GAJO,CACpBC,iBANoB,uCAAG,WAAOC,GAAP,eAAArL,EAAA,sEACAC,IAAMO,IAAN,UAAab,GAAb,cAA0B2L,mBAAmBD,KAD7C,cACjBlL,EADiB,yBAEhBA,EAASC,MAFO,2CAAH,uDC0DPmL,GAtDO,WACpB,IAAMF,EAAc,IAAIG,gBAAgBC,cAAcC,QAAQlL,IAAI,KADxC,EAEgByC,mBAAS,MAFzB,mBAEnB0I,EAFmB,KAEJC,EAFI,KAmB1B,OAfA9E,qBAAU,YACa,uCAAG,kCAAA9G,EAAA,+EAECmL,GAAcC,iBAAiBC,GAFhC,OAEdtE,EAFc,OAGpB6E,EAAiB7E,GAHG,gDAKd5G,EAAW,KAAUA,SACrBsJ,EAActJ,EAASC,KAAOD,EAASC,KAAK8G,MAAQ,KACpDF,EAAa7G,EAAWA,EAAS8G,OAAS,KAChD2E,EAAiB,CAAE1E,OAAO,EAAMF,aAAYyC,gBARxB,yDAAH,qDAWrBoC,KACC,CAACR,IAECM,EAMDA,EAAczE,MAEd,eAACS,EAAA,EAAD,CAAOlE,QAAQ,SAAf,+DACqDkI,EAAclC,YADnE,iBAC8FkC,EAAc3E,WAD5G,OAMyB,IAAzB2E,EAActE,OAEd,cAACM,EAAA,EAAD,CAAOlE,QAAQ,UAAf,8BAOF,gCACE,iDACCkI,EAAc/D,KAAI,SAAAlH,GAAK,OACtB,cAAC,GAAD,CAEEA,MAAOA,GADFA,EAAMuF,UA1BjB,qBAAKvB,UAAU,cAAf,SACE,cAAC+C,EAAA,EAAD,CAASC,UAAU,SAASjE,QAAQ,eC0F3BqI,GA7GI,WACjB,IAAM1K,EAAW2B,cACXV,EAAaW,aAAY,SAAAtB,GAAK,OAAIA,EAAMW,cAFvB,EAIaY,oBAAS,GAJtB,mBAIhB8I,EAJgB,KAIHC,EAJG,OAKiB/I,mBAAS,MAL1B,mBAKhBgJ,EALgB,KAKFC,EALE,KAOjBC,EAAY,uCAAG,WAAOnD,GAAP,mCAAAhJ,EAAA,yDACnBgJ,EAAMC,iBACN+C,GAAa,GACPjG,EAAWiD,EAAME,OAAOC,SAASqB,aAAanB,MAC9CxD,EAAOmD,EAAME,OAAOC,SAASiD,SAAS/C,MACtCoB,EAAWzB,EAAME,OAAOC,SAASuB,aAAarB,MAC9CgD,EAAiBrD,EAAME,OAAOC,SAASmD,mBAAmBjD,MAM5DoB,IAAa4B,EAZE,iBAajBH,EAAgB,CAAEhF,OAAO,EAAMF,WAAY,IAAKyC,YAAa,gCAC7DuC,GAAa,GAdI,yCAiBT3D,EAAW,CAAEtC,WAAUF,OAAM4E,YAjBpB,UAkBWvC,GAAYE,OAAOC,GAlB9B,eAkBTkE,EAlBS,OAmBTxM,EAAc,CAAEgG,SAAUwG,EAAYxG,SAAU0E,YAnBvC,UAoBI5K,EAAaC,MAAMC,GApBvB,QAoBToB,EApBS,OAqBfwJ,OAAOC,aAAaC,QAClB,sBAAuBC,KAAKC,UAAU5J,IAExCC,EAASF,EAAcC,IAxBR,mDA0BThB,EAAW,KAAUA,SACrBsJ,EAActJ,EAAWA,EAASC,KAAK8G,MAAQ,KAC/CF,EAAa7G,EAAWA,EAAS8G,OAAS,KAChDiF,EAAgB,CAAEhF,OAAO,EAAMF,aAAYyC,gBAC3CuC,GAAa,GA9BE,2DAAH,sDAmClB,OAAI3J,EAAW1B,MACN,cAAC,IAAD,CAAUmF,GAAE,aAAQzD,EAAW0D,YAItC,cAACP,EAAA,EAAD,UACE,eAACE,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,IAEA,eAACA,EAAA,EAAD,CAAKqF,GAAI,EAAGC,GAAI,EAAhB,UACE,eAACtB,EAAA,EAAD,CAAMC,SAAUuC,EAAhB,UACE,eAACxC,EAAA,EAAKE,MAAN,CAAYC,UAAU,eAAtB,UACE,cAACH,EAAA,EAAKI,MAAN,uBACA,cAACJ,EAAA,EAAKK,QAAN,CAAc3I,KAAK,OAAO6J,YAAY,gBAGxC,eAACvB,EAAA,EAAKE,MAAN,CAAYC,UAAU,WAAtB,UACE,cAACH,EAAA,EAAKI,MAAN,mBACA,cAACJ,EAAA,EAAKK,QAAN,CAAc3I,KAAK,OAAO6J,YAAY,YAGxC,eAACvB,EAAA,EAAKE,MAAN,CAAYC,UAAU,eAAtB,UACE,cAACH,EAAA,EAAKI,MAAN,uBACA,cAACJ,EAAA,EAAKK,QAAN,CAAc3I,KAAK,WAAW6J,YAAY,gBAG5C,eAACvB,EAAA,EAAKE,MAAN,CAAYC,UAAU,qBAAtB,UACE,cAACH,EAAA,EAAKI,MAAN,6BACA,cAACJ,EAAA,EAAKK,QAAN,CAAc3I,KAAK,WAAW6J,YAAY,gBAG5C,sBAAKxG,UAAU,gCAAf,WACIqH,GACA,cAACvI,EAAA,EAAD,CAAQC,QAAQ,UAAUpC,KAAK,SAA/B,oBAKD0K,GACC,eAACvI,EAAA,EAAD,CAAQC,QAAQ,UAAUmB,UAAQ,EAAlC,UACE,cAAC6C,EAAA,EAAD,CACEM,GAAG,OACHL,UAAU,SACV3C,KAAK,KACLiD,KAAK,SACLC,cAAY,SAEd,sBAAMvD,UAAU,UAAhB,iCAMR,uBACCuH,GACC,eAACtE,EAAA,EAAD,CAAOlE,QAAQ,SAAf,kDACwCwI,EAAaxC,YADrD,iBACgFwC,EAAajF,WAD7F,UAMJ,cAACrB,EAAA,EAAD,U,UC/GFhG,GAAO,UAAMC,GAAN,eAiBE4M,GAJO,CACpBC,WAZc,uCAAG,WAAOC,EAAY/L,GAAnB,mBAAAX,EAAA,6DACb2M,EAAW,IAAIC,UACVC,OAAO,SAAUH,GACpB9L,EAAS,CACbC,QAAS,CAAE,eAAgB,sBAAuB,cAAgB,UAAhB,OAA2BF,KAJ9D,SAOMV,IAAMC,KAAN,UAAcP,GAAd,WAAgCgN,EAAU/L,GAPhD,cAOXT,EAPW,yBAQVA,EAASC,MARC,2CAAH,yDCoSD0M,GAhSU,WACvB,IAAMzK,EAAaW,aAAY,SAAAtB,GAAK,OAAIA,EAAMW,cADjB,EAGKY,oBAAS,GAHd,mBAGtB8J,EAHsB,KAGVC,EAHU,OAIW/J,mBAAS,MAJpB,mBAItBgK,EAJsB,KAIRC,EAJQ,OAKajK,mBAAS,IALtB,mBAKtBkK,EALsB,KAKPC,EALO,KAOvBC,EAAsB,uCAAG,WAAOrE,GAAP,2BAAAhJ,EAAA,yDAC7BgJ,EAAMC,iBACN+D,GAAY,GACNM,EAActE,EAAME,OAAOC,SAASoE,gBAAgBlE,MACpDmE,EAAcxE,EAAME,OAAOC,SAASsE,gBAAgBpE,MACpDqE,EAAoB1E,EAAME,OAAOC,SAASwE,sBAAsBtE,MACtEL,EAAME,OAAOC,SAASoE,gBAAgBlE,MAAQ,GAC9CL,EAAME,OAAOC,SAASsE,gBAAgBpE,MAAQ,GAC9CL,EAAME,OAAOC,SAASwE,sBAAsBtE,MAAQ,GAChDmE,IAAgBE,EATS,iCAWnBE,EAAc,CAAEN,cAAaE,eAXV,UAYnBtF,GAAYI,eAAesF,EAAavL,EAAWyC,OAAQzC,EAAW1B,OAZnD,QAazBuM,EAAgB,MAChBF,GAAY,GAda,kDAgBnB7M,EAAW,KAAUA,SACrBsJ,EAActJ,EAAWA,EAASC,KAAK8G,MAAQ,KAC/CF,EAAa7G,EAAWA,EAAS8G,OAAS,KAChDiG,EAAgB,CAAEhG,OAAO,EAAMF,aAAYyC,gBAC3CuD,GAAY,GApBa,gCAuBP,oCACD,IACnBE,EAAgB,CAAEhG,OAAO,EAAMF,WADZ,IACwByC,YAFvB,sCAGpBuD,GAAY,GA1Be,0DAAH,sDA8BtBa,EAAkB,uCAAG,WAAO7E,GAAP,uBAAAhJ,EAAA,6DACzBgJ,EAAMC,iBACN+D,GAAY,GACNc,EAAU9E,EAAME,OAAOC,SAAS4E,YAAY1E,MAClDL,EAAME,OAAOC,SAAS4E,YAAY1E,MAAQ,GAJjB,SAMjBuE,EAAc,CAAE/H,KAAMiI,GANL,SAOjB5F,GAAYI,eAAesF,EAAavL,EAAWyC,OAAQzC,EAAW1B,OAPrD,OAQvBuM,EAAgB,MAChBF,GAAY,GATW,kDAWjB7M,EAAW,KAAUA,SACrBsJ,EAActJ,EAAWA,EAASC,KAAK8G,MAAQ,KAC/CF,EAAa7G,EAAWA,EAAS8G,OAAS,KAChDiG,EAAgB,CAAEhG,OAAO,EAAMF,aAAYyC,gBAC3CuD,GAAY,GAfW,0DAAH,sDAmBlBgB,EAAiB,uCAAG,WAAOhF,GAAP,uBAAAhJ,EAAA,6DACxBgJ,EAAMC,iBACN+D,GAAY,GACNiB,EAASjF,EAAME,OAAOC,SAAS+E,WAAW7E,MAChDL,EAAME,OAAOC,SAAS+E,WAAW7E,MAAQ,GAJjB,SAMhBuE,EAAc,CAAElE,IAAKuE,GANL,SAOhB/F,GAAYI,eAAesF,EAAavL,EAAWyC,OAAQzC,EAAW1B,OAPtD,OAQtBuM,EAAgB,MAChBF,GAAY,GATU,kDAWhB7M,EAAW,KAAUA,SACrBsJ,EAActJ,EAAWA,EAASC,KAAK8G,MAAQ,KAC/CF,EAAa7G,EAAWA,EAAS8G,OAAS,KAChDiG,EAAgB,CAAEhG,OAAO,EAAMF,aAAYyC,gBAC3CuD,GAAY,GAfU,0DAAH,sDAmBjBmB,EAAoB,uCAAG,WAAOnF,GAAP,qBAAAhJ,EAAA,6DAC3BgJ,EAAMC,iBACN+D,GAAY,GACNoB,EAAYjB,EAAc,GAHL,kBAKnBX,GAAcC,WAAW2B,EAAW/L,EAAW1B,OAL5B,OAMzBuM,EAAgB,MAChBF,GAAY,GAPa,kDASnB7M,EAAW,KAAUA,SACrBsJ,EAActJ,EAAWA,EAASC,KAAK8G,MAAQ,KAC/CF,EAAa7G,EAAWA,EAAS8G,OAAS,KAChDiG,EAAgB,CAAEhG,OAAO,EAAMF,aAAYyC,gBAC3CuD,GAAY,GAba,0DAAH,sDAiB1B,OAAK3K,EAAW1B,MAKd,qCACE,0CACCsM,GAAgB,qCACf,eAACtF,EAAA,EAAD,CAAOlE,QAAQ,SAAf,0BACgBwJ,EAAaxD,YAD7B,iBACwDwD,EAAajG,WADrE,OAGA,0BAIF,eAACqH,GAAA,EAAD,CAAWC,iBAAiB,IAA5B,UACE,eAAC/I,EAAA,EAAD,WACE,cAACA,EAAA,EAAK1B,OAAN,UACE,cAACwK,GAAA,EAAUE,OAAX,CAAkBxG,GAAIvE,IAAQC,QAAQ,OAAO+K,SAAS,IAAtD,2BAIF,cAACH,GAAA,EAAUI,SAAX,CAAoBD,SAAS,IAA7B,SACE,cAACjJ,EAAA,EAAKvB,KAAN,UAEE,eAAC2F,EAAA,EAAD,CAAMC,SAAUiE,EAAhB,UACE,eAAClE,EAAA,EAAKE,MAAN,CAAYC,UAAU,cAAtB,UACE,cAACH,EAAA,EAAKI,MAAN,uBACA,cAACJ,EAAA,EAAKK,QAAN,CAAc3I,KAAK,OAAO6J,YAAY,gBAGxC,sBAAKxG,UAAU,gCAAf,WACIqI,GACA,cAACvJ,EAAA,EAAD,CAAQC,QAAQ,UAAUpC,KAAK,SAA/B,oBAKD0L,GACC,eAACvJ,EAAA,EAAD,CAAQC,QAAQ,UAAUmB,UAAQ,EAAlC,UACE,cAAC6C,EAAA,EAAD,CACEM,GAAG,OACHL,UAAU,SACV3C,KAAK,KACLiD,KAAK,SACLC,cAAY,SAEd,sBAAMvD,UAAU,UAAhB,wCASd,eAACa,EAAA,EAAD,WACE,cAACA,EAAA,EAAK1B,OAAN,UACE,cAACwK,GAAA,EAAUE,OAAX,CAAkBxG,GAAIvE,IAAQC,QAAQ,OAAO+K,SAAS,IAAtD,0BAIF,cAACH,GAAA,EAAUI,SAAX,CAAoBD,SAAS,IAA7B,SACE,cAACjJ,EAAA,EAAKvB,KAAN,UAEE,eAAC2F,EAAA,EAAD,CAAMC,SAAUoE,EAAhB,UACE,eAACrE,EAAA,EAAKE,MAAN,CAAYC,UAAU,aAAtB,UACE,cAACH,EAAA,EAAKI,MAAN,sBACA,cAACJ,EAAA,EAAKK,QAAN,CAAc3I,KAAK,OAAO6J,YAAY,eAGxC,sBAAKxG,UAAU,gCAAf,WACIqI,GACA,cAACvJ,EAAA,EAAD,CAAQC,QAAQ,UAAUpC,KAAK,SAA/B,oBAKD0L,GACC,eAACvJ,EAAA,EAAD,CAAQC,QAAQ,UAAUmB,UAAQ,EAAlC,UACE,cAAC6C,EAAA,EAAD,CACEM,GAAG,OACHL,UAAU,SACV3C,KAAK,KACLiD,KAAK,SACLC,cAAY,SAEd,sBAAMvD,UAAU,UAAhB,wCASd,eAACa,EAAA,EAAD,WACE,cAACA,EAAA,EAAK1B,OAAN,UACE,cAACwK,GAAA,EAAUE,OAAX,CAAkBxG,GAAIvE,IAAQC,QAAQ,OAAO+K,SAAS,IAAtD,+BAIF,cAACH,GAAA,EAAUI,SAAX,CAAoBD,SAAS,IAA7B,SACE,cAACjJ,EAAA,EAAKvB,KAAN,UAEE,eAAC2F,EAAA,EAAD,CAAMC,SAAUyD,EAAhB,UACE,eAAC1D,EAAA,EAAKE,MAAN,CAAYC,UAAU,kBAAtB,UACE,cAACH,EAAA,EAAKI,MAAN,+BACA,cAACJ,EAAA,EAAKK,QAAN,CAAc3I,KAAK,WAAW6J,YAAY,wBAG5C,eAACvB,EAAA,EAAKE,MAAN,CAAYC,UAAU,kBAAtB,UACE,cAACH,EAAA,EAAKI,MAAN,2BACA,cAACJ,EAAA,EAAKK,QAAN,CAAc3I,KAAK,WAAW6J,YAAY,oBAG5C,eAACvB,EAAA,EAAKE,MAAN,CAAYC,UAAU,wBAAtB,UACE,cAACH,EAAA,EAAKI,MAAN,iCACA,cAACJ,EAAA,EAAKK,QAAN,CAAc3I,KAAK,WAAW6J,YAAY,0BAG5C,sBAAKxG,UAAU,gCAAf,WACIqI,GACA,cAACvJ,EAAA,EAAD,CAAQC,QAAQ,UAAUpC,KAAK,SAA/B,oBAKD0L,GACC,eAACvJ,EAAA,EAAD,CAAQC,QAAQ,UAAUmB,UAAQ,EAAlC,UACE,cAAC6C,EAAA,EAAD,CACEM,GAAG,OACHL,UAAU,SACV3C,KAAK,KACLiD,KAAK,SACLC,cAAY,SAEd,sBAAMvD,UAAU,UAAhB,wCASd,eAACa,EAAA,EAAD,WACE,cAACA,EAAA,EAAK1B,OAAN,UACE,cAACwK,GAAA,EAAUE,OAAX,CAAkBxG,GAAIvE,IAAQC,QAAQ,OAAO+K,SAAS,IAAtD,6BAIF,cAACH,GAAA,EAAUI,SAAX,CAAoBD,SAAS,IAA7B,SACE,cAACjJ,EAAA,EAAKvB,KAAN,UAEE,eAAC2F,EAAA,EAAD,CAAM+E,QAAQ,sBAAsB9E,SAAUuE,EAA9C,UACE,cAACxE,EAAA,EAAKE,MAAN,CAAYC,UAAU,gBAAtB,SACE,cAACH,EAAA,EAAKgF,KAAN,CACE1I,GAAG,SACH2I,MAAM,aACNC,SAAU,SAAAC,GACR1B,EAAiB0B,EAAE5F,OAAO6F,YAKhC,sBAAKrK,UAAU,gCAAf,WACIqI,GACA,cAACvJ,EAAA,EAAD,CAAQC,QAAQ,UAAUpC,KAAK,SAA/B,oBAKD0L,GACC,eAACvJ,EAAA,EAAD,CAAQC,QAAQ,UAAUmB,UAAQ,EAAlC,UACE,cAAC6C,EAAA,EAAD,CACEM,GAAG,OACHL,UAAU,SACV3C,KAAK,KACLiD,KAAK,SACLC,cAAY,SAEd,sBAAMvD,UAAU,UAAhB,8CArLX,cAAC,IAAD,CAAUoB,GAAG,OC7FTkJ,GANE,kBACf,8BACE,qDCqJWC,gBAtIH,WACV,IAAM7N,EAAW2B,cACXV,EAAaW,aAAY,SAAAtB,GAAK,OAAIA,EAAMW,cACxC6M,EAAUC,cAEhBrI,qBAAU,YACwB,uCAAG,gCAAA9G,EAAA,2DAC3BoP,EAAiBzE,OAAOC,aAAayE,QAAQ,wBADlB,uBAGzBlO,EAAO2J,KAAKwE,MAAMF,GAHO,SAITzM,EAAcrC,OAAOa,EAAKR,OAJjB,OAIzBmB,EAJyB,OAK/BV,EAASF,EAAc,2BAAKC,GAASW,KALN,2CAAH,qDAQhCyN,KACC,CAACnO,IAEJ,IAUMoO,EAAe,SAACxG,GACN,UAAVA,EACFkG,EAAQO,KAAK,UACM,YAAVzG,EACTkG,EAAQO,KAAK,YACM,YAAVzG,EACTkG,EAAQO,KAAR,aAAmBpN,EAAW0D,WACZ,aAAViD,EACRkG,EAAQO,KAAK,aACM,WAAVzG,IACT5H,EAASF,EAAc,KACvByJ,OAAOC,aAAa8E,QACpBR,EAAQO,KAAK,OAIjB,OACE,qCACE,eAACE,EAAA,EAAD,CAAQC,kBAAgB,EAACC,OAAO,KAAKC,GAAG,UAAUrM,QAAQ,OAA1D,UAEE,cAAC,gBAAD,CAAeqC,GAAG,IAAlB,SACE,cAAC,IAAD,CAAepB,UAAU,YAAYK,KAAM,GAAIgL,MAAM,cAGvD,cAACJ,EAAA,EAAOpB,OAAR,CAAeyB,gBAAc,0BAE7B,eAACL,EAAA,EAAOlB,SAAR,CAAiBxI,GAAG,wBAApB,UACE,cAACgK,EAAA,EAAD,CAAKvL,UAAU,UAAf,SAEE,cAAC,gBAAD,CAAeoB,GAAG,IAAlB,SACE,cAACmK,EAAA,EAAIjK,KAAL,CAAUkK,KAAK,IAAf,sBAKJ,eAACD,EAAA,EAAD,YACI5N,EAAW1B,OACX,eAACwP,EAAA,EAAD,CAAaC,SAAUZ,EAAca,MAAO,kBAAmBpK,GAAG,qBAAlE,UACE,cAACkK,EAAA,EAAYG,KAAb,CAAkB9B,SAAS,QAA3B,mBACA,cAAC2B,EAAA,EAAYI,QAAb,IACA,cAACJ,EAAA,EAAYG,KAAb,CAAkB9B,SAAS,UAA3B,wBAIHnM,EAAW1B,OACV,eAACwP,EAAA,EAAD,CAAaC,SAAUZ,EAAca,MAAK,WAAMhO,EAAW0D,UAAYE,GAAG,qBAA1E,UACE,cAACkK,EAAA,EAAYG,KAAb,CAAkB9B,SAAS,UAA3B,qBACA,cAAC2B,EAAA,EAAYI,QAAb,IACA,cAACJ,EAAA,EAAYG,KAAb,CAAkB9B,SAAS,WAA3B,sBACA,cAAC2B,EAAA,EAAYI,QAAb,IACA,cAACJ,EAAA,EAAYG,KAAb,CAAkB9B,SAAS,SAA3B,0BAKN,cAAC7E,EAAA,EAAD,CAAM6G,QAAM,EAAC5G,SAjEA,SAACZ,GACpBA,EAAMC,iBACN,IAAMwH,EAAezH,EAAME,OAAOC,SAASuH,iBAAiBrH,MAC5DL,EAAME,OAAOC,SAASuH,iBAAiBrH,MAAQ,GAE1B,KAAjBoH,GACFvB,EAAQO,KAAR,oBAA0BnE,mBAAmBmF,MA2DzC,SACE,eAAC9G,EAAA,EAAKE,MAAN,CAAYC,UAAU,mBAAtB,UACE,cAAC6G,EAAA,EAAD,CAAatP,KAAK,OAAO6J,YAAY,SAASxG,UAAU,YACxD,cAAClB,EAAA,EAAD,CAAQC,QAAQ,gBAAgBpC,KAAK,SAArC,+BAMR,eAACmE,EAAA,EAAD,WAEE,uBAEA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOoL,KAAK,SAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,WAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,eAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,YAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,UAAZ,SACE,cAAC,GAAD,MAEF,eAAC,IAAD,CAAOC,OAAK,EAACD,KAAK,IAAlB,UACE,eAACE,EAAA,EAAD,WACE,iEACA,mJAIF,uBACA,cAAC,GAAD,OAEF,cAAC,IAAD,CAAOC,UAAW/B,QAGpB,uBACA,qBAAKtK,UAAU,cAAf,SACE,6CAAe,IAAI0B,MAAO4K,4BC1IpCC,IAASC,OACP,cAAC,IAAD,CAAU5O,MAAOA,EAAjB,SACE,cAAC,gBAAD,UACE,cAAC,GAAD,QAGJ6O,SAASC,eAAe,W","file":"static/js/main.5f5084aa.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = `${process.env.REACT_APP_SERVER_URL}/api/login`\n\nconst login = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nconst loginService = {\n  login\n}\n\nexport default loginService","import axios from 'axios'\n\nconst baseUrl = `${process.env.REACT_APP_SERVER_URL}/api/tviits`\n\nconst getAll = async (offset = 0) => {\n  const response = await axios.get(`${baseUrl}?offset=${offset}`)\n  return response.data\n}\n\nconst postTviit = async (tviit, token) => {\n  const config = {\n    headers: { Authorization: `bearer ${token}` }\n  }\n\n  const response = await axios.post(baseUrl, tviit, config)\n  return response.data\n}\n\nconst deleteTviit = async (tviitId, token) => {\n  const config = {\n    headers: { Authorization: `bearer ${token}` }\n  }\n\n  const response = await axios.delete(`${baseUrl}/${tviitId}`, config)\n  return response.data\n}\n\nconst tviitService = {\n  getAll,\n  postTviit,\n  deleteTviit\n}\n\nexport default tviitService","import loginService from '../services/login'\nimport tviitService from '../services/tviits'\n\nconst activeUserReducer = (state = {}, action) => {\n  switch (action.type) {\n  case 'USER_LOGIN':\n    return { ...action.data }\n  case 'SET_ACTIVE_USER':\n    return { ...action.data }\n  case 'USER_DELETE_TVIIT':\n    return { ...state, tviitDeleted: action.data.tviitId }\n  case 'USER_LIKE_TVIIT': {\n    const newLikes = state.actions.likes.concat(action.data.tviitId)\n    return { ...state, actions: { likes: newLikes } }\n  }\n  case 'USER_UNLIKE_TVIIT': {\n    const filteredLikes = state.actions.likes.filter(tviitId => tviitId !== action.data.tviitId)\n    return { ...state, actions: { likes: filteredLikes } }\n  }\n  default:\n    return state\n  }\n}\n\nexport const login = (username, password) => {\n  return async dispatch => {\n    try {\n      const credentials = { username, password }\n      const user = await loginService.login(credentials)\n      dispatch({\n        type: 'USER_LOGIN',\n        data: {\n          ...user\n        }\n      })\n      window.localStorage.setItem(\n        'loggedTviitteriUser', JSON.stringify(user)\n      )\n    } catch {\n      dispatch({\n        type: 'USER_LOGIN',\n        data: {\n          username,\n          failed: true\n        }\n      })\n    }\n  }\n}\n\nexport const setActiveUser = (user) => {\n  return async dispatch => {\n    dispatch({\n      type: 'SET_ACTIVE_USER',\n      data: {\n        ...user\n      }\n    })\n  }\n}\n\nexport const setDeletedTviit = (tviitId) => {\n  return async dispatch => {\n    dispatch({\n      type: 'USER_DELETE_TVIIT',\n      data: {\n        tviitId\n      }\n    })\n  }\n}\n\nexport const postTviit = (tviitToPost, token) => {\n  return async dispatch => {\n    try {\n      const tviit = await tviitService.postTviit(tviitToPost, token)\n      dispatch({\n        type: 'USER_POST_TVIIT',\n        data: {\n          ...tviit\n        }\n      })\n    } catch {\n      dispatch({\n        type: 'USER_POST_TVIIT_FAILED',\n        data: {}\n      })\n    }\n  }\n}\n\nexport const likeTviit = (tviitId) => {\n  return async dispatch => {\n    dispatch({\n      type: 'USER_LIKE_TVIIT',\n      data: {\n        tviitId\n      }\n    })\n  }\n}\n\nexport const unlikeTviit = (tviitId) => {\n  return async dispatch => {\n    dispatch({\n      type: 'USER_UNLIKE_TVIIT',\n      data: {\n        tviitId\n      }\n    })\n  }\n}\n\nexport default activeUserReducer","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport activeUserReducer from './reducers/activeUserReducer'\n\nconst reducer = combineReducers({\n  activeUser: activeUserReducer\n})\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n)\n\nexport default store","import axios from 'axios'\n\nconst baseUrl = `${process.env.REACT_APP_SERVER_URL}/api/actions`\n\nconst getAll = async (token) => {\n  const config = {\n    headers: { Authorization: `bearer ${token}` }\n  }\n\n  const response = await axios.get(baseUrl, config)\n  return response.data\n}\n\nconst postAction = async (action, token) => {\n  const config = {\n    headers: { Authorization: `bearer ${token}` }\n  }\n\n  const response = await axios.post(baseUrl, action, config)\n  return response.data\n}\n\nconst deleteAction = async (action, token) => {\n  const config = {\n    data: action,\n    headers: { Authorization: `bearer ${token}` }\n  }\n\n  const response = await axios.delete(baseUrl, config)\n  return response.data\n}\n\nconst actionService = {\n  getAll,\n  postAction,\n  deleteAction\n}\n\nexport default actionService","import React, { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Modal, Button } from 'react-bootstrap'\nimport { TrashFill } from 'react-bootstrap-icons'\n\nimport tviitService from '../services/tviits'\n\nimport { setDeletedTviit } from '../reducers/activeUserReducer'\n\nconst DeleteTviitModalButton = ({ tviitId }) => {\n  const dispatch = useDispatch()\n  const activeUser = useSelector(state => state.activeUser)\n\n  const [show, setShow] = useState(false)\n\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n\n  const handleDeleteTviit = async () => {\n    try {\n      await tviitService.deleteTviit(tviitId, activeUser.token)\n      dispatch(setDeletedTviit(tviitId))\n      // setShow(false)\n    } catch (exception) {\n      // TODO\n      console.log('Tviit deletion failed!')\n    }\n  }\n\n  return (\n    <>\n      <Button variant=\"primary\" onClick={handleShow}>\n        <TrashFill />\n      </Button>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Delete tviit?</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>Are you sure you want to delete this tviit?</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Cancel\n          </Button>\n          <Button variant=\"primary\" onClick={handleDeleteTviit}>\n            Delete\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  )\n}\n\nexport default DeleteTviitModalButton","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Button } from 'react-bootstrap'\nimport { Star, StarFill } from 'react-bootstrap-icons'\n\nimport actionService from '../services/actions'\n\nimport { likeTviit, unlikeTviit } from '../reducers/activeUserReducer'\n\nconst LikeTviitButton = ({ tviitId, likes }) => {\n  const dispatch = useDispatch()\n  const activeUser = useSelector(state => state.activeUser)\n\n  const handleLikeTviit = async () => {\n    try {\n      const action = { actionType: 'like', targetTviitId: tviitId }\n      await actionService.postAction(action, activeUser.token)\n      dispatch(likeTviit(tviitId))\n    } catch (exception) {\n      // TODO\n      console.log('Tviit liking failed!')\n    }\n  }\n\n  const handleUnlikeTviit = async () => {\n    try {\n      const action = { actionType: 'like', targetTviitId: tviitId }\n      await actionService.deleteAction(action, activeUser.token)\n      dispatch(unlikeTviit(tviitId))\n    } catch (exception) {\n      // TODO\n      console.log('Tviit unliking failed!')\n    }\n  }\n\n  const margin = {\n    marginTop: '3px'\n  }\n\n  if (!activeUser.token) {\n    return (\n      <Button variant=\"primary\" disabled>\n        <div className=\"d-flex justify-content-center\">\n          <StarFill className=\"mr-1\" style={margin} /> {likes}\n        </div>\n      </Button>\n    )\n  }\n\n  if (activeUser.actions.likes.includes(tviitId)) {\n    return (\n      <Button variant=\"primary\" onClick={handleUnlikeTviit}>\n        <div className=\"d-flex justify-content-center\">\n          <StarFill className=\"mr-1\" style={margin} /> {likes}\n        </div>\n      </Button>\n    )\n  } else {\n    return (\n      <Button variant=\"primary\" onClick={handleLikeTviit}>\n        <div className=\"d-flex justify-content-center\">\n          <Star className=\"mr-1\" style={margin} />{likes}\n        </div>\n      </Button>\n    )\n  }\n}\n\nexport default LikeTviitButton","import React from 'react'\nimport { Image } from 'react-bootstrap'\n\nconst Avatar = ({ userId, size }) => {\n  const avatarSrc = `${process.env.REACT_APP_SERVER_URL}/api/images/avatars/${userId}`\n\n  return <Image src={avatarSrc} width={size} height={size} roundedCircle />\n}\n\nexport default Avatar","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Card, Container, Col, Row } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nimport DeleteTviitModalButton from './DeleteTviitModalButton'\nimport LikeTviitButton from './LikeTviitButton'\nimport Avatar from './Avatar'\n\nconst Tviit = ({ tviit }) => {\n\n  const activeUser = useSelector(state => state.activeUser)\n\n  return (\n    <>\n      <Card>\n        <Card.Header >\n          <div className=\"d-flex justify-content-between\">\n\n            <Container fluid>\n              <Row className=\"d-flex align-items-center\">\n                <Col xs=\"auto\" className=\"pl-0 pr-2\">\n                  <Avatar userId={tviit.userId} size={48} />\n                </Col>\n                <Col>\n                  <Row><strong>{tviit.name}</strong></Row>\n                  <Row>\n                    <LinkContainer to={`/u/${tviit.username}`}>\n                      <Card.Link>@{tviit.username}</Card.Link>\n                    </LinkContainer>\n                  </Row>\n                </Col>\n              </Row>\n            </Container>\n\n            <div className=\"d-flex align-items-center\">\n              {tviit.username !== activeUser.username &&\n                <LikeTviitButton tviitId={tviit.id} likes={tviit.likes} />\n              }\n              {tviit.username === activeUser.username &&\n                <DeleteTviitModalButton tviitId={tviit.id} />\n              }\n            </div>\n\n          </div>\n        </Card.Header>\n\n        <Card.Body>\n          <Card.Text>{tviit.content}</Card.Text>\n        </Card.Body>\n\n        <Card.Footer>\n          <small className=\"text-muted\">Posted {new Date(tviit.postDate).toString()}</small>\n        </Card.Footer>\n      </Card>\n      <br />\n    </>\n  )\n}\n\n// TVIIT EXAMPLE STRUC\n// {\n//   username: \"testaaja\",\n//   name: \"Testi Testailija\",\n//   id: 5,\n//   author: 1,\n//   content: \"Miten tämä toimii\",\n//   postDate: \"2020-12-13T18:48:14.406Z\",\n//   responseTo: null\n// }\n\nexport default Tviit","import React, { useState, useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { Spinner, Alert, Button } from 'react-bootstrap'\n\nimport tviitService from '../services/tviits'\n\nimport Tviit from './Tviit'\n\nconst Feed = () => {\n  const activeUser = useSelector(state => state.activeUser)\n\n  const [feed, setFeed] = useState(null)\n  const [noMoreTviits, setNoMoreTviits] = useState(false)\n  const [isSearching, setIsSearching] = useState(false)\n\n  useEffect(() => {\n    const handleTviitGetting = async () => {\n      try {\n        const tviits = await tviitService.getAll()\n        setFeed(tviits)\n      } catch (exception) {\n        const statusCode = exception.response ? exception.response.status : null\n        setFeed({ error: true, statusCode })\n      }\n    }\n    handleTviitGetting()\n  }, [])\n\n  const handleFetchMoreTviits = async () => {\n    try {\n      setIsSearching(true)\n      const tviits = await tviitService.getAll(feed.length)\n      if (tviits.length === 0) {\n        setNoMoreTviits(true)\n      } else {\n        setFeed([...new Set(feed.concat(tviits))].sort((a, b) => b.id - a.id))\n      }\n      setIsSearching(false)\n    } catch (exception) {\n      // const statusCode = exception.response ? exception.response.status : null\n      setIsSearching(false)\n    }\n  }\n\n  if (!feed) return (\n    <div className=\"text-center\">\n      <Spinner animation=\"border\" variant=\"primary\" />\n    </div>\n  )\n\n  if (feed.error) {\n    return (\n      <Alert variant=\"danger\">\n        Error while fetching feed (StatusCode: {feed.statusCode})\n      </Alert>\n    )\n  }\n\n  // If a tviit is deleted by the active user, check if it's in the feed and if it's, remove it\n  if (activeUser.tviitDeleted &&\n    feed.map(tviit => tviit.id).includes(activeUser.tviitDeleted)) {\n\n    const filteredTviits = feed.filter(tviit => tviit.id !== activeUser.tviitDeleted)\n    setFeed(filteredTviits)\n  }\n\n  return (\n    <div>\n      <h2>Newest:</h2>\n      {feed.map(tviit =>\n        <Tviit\n          key={tviit.id}\n          tviit={tviit}\n        />\n      )}\n\n      <div className=\"d-flex justify-content-center\">\n        {(!noMoreTviits && !isSearching) &&\n          <Button variant=\"primary\"\n            onClick={handleFetchMoreTviits}\n            className=\"w-50\">Get more tviits</Button>\n        }\n        {(!noMoreTviits && isSearching) &&\n          <Button variant=\"primary\" className=\"w-50\" disabled block>\n            <Spinner\n              as=\"span\"\n              animation=\"border\"\n              size=\"sm\"\n              role=\"status\"\n              aria-hidden=\"true\"\n            />\n            <span className=\"sr-only\">Loading...</span>\n          </Button>\n        }\n        {(noMoreTviits && !isSearching) &&\n          <Button variant=\"primary\"\n            className=\"w-50\"\n            disabled block>Get more tviits</Button>\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default Feed","import axios from 'axios'\n\nconst baseUrl = `${process.env.REACT_APP_SERVER_URL}/api/users`\n\nconst getUser = async (username, offset = 0) => {\n  const response = await axios.get(`${baseUrl}?username=${username}&getTviits=true&offset=${offset}`)\n  return response.data\n}\n\nconst signUp = async (userInfo) => {\n  const response = await axios.post(baseUrl, userInfo)\n  return response.data\n}\n\nconst modifyUserInfo = async (userInfo, userId, token) => {\n  const config = {\n    headers: { Authorization: `bearer ${token}` }\n  }\n\n  const response = await axios.patch(`${baseUrl}/${userId}`, userInfo, config)\n  return response.data\n}\n\nconst userService = {\n  getUser,\n  signUp,\n  modifyUserInfo\n}\n\nexport default userService","import React, { useState, useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useParams } from 'react-router-dom'\nimport { Spinner, Form, Button, Alert, Container, Row, Col } from 'react-bootstrap'\n\nimport userService from '../services/users'\nimport tviitService from '../services/tviits'\n\nimport Tviit from './Tviit'\nimport Avatar from './Avatar'\n\nconst Userpage = () => {\n  const username = useParams().username\n  const activeUser = useSelector(state => state.activeUser)\n\n  const [userpage, setUserpage] = useState(null)\n  const [tviitingFailed, setTviitingFailed] = useState(null)\n\n  useEffect(() => {\n    const handleUserGetting = async () => {\n      try {\n        const user = await userService.getUser(username)\n        setUserpage({ ...user })\n      } catch (exception) {\n        const statusCode = exception.response ? exception.response.status : null\n        setUserpage({ error: true, statusCode })\n      }\n    }\n    handleUserGetting()\n  }, [username])\n\n  if (!userpage) return (\n    <div className=\"text-center\">\n      <Spinner animation=\"border\" variant=\"primary\" />\n    </div>\n  )\n\n  if (userpage.error) {\n    if (userpage.statusCode === 404) {\n      return (\n        <Alert variant=\"warning\">\n          404, User not found\n        </Alert>\n      )\n    } else {\n      return (\n        <Alert variant=\"danger\">\n          Error\n        </Alert>\n      )\n    }\n  }\n\n  // If a tviit is deleted by the active user, check if it's in the userpage's tviits and if it's, remove it\n  if (activeUser.username === username &&\n    activeUser.tviitDeleted &&\n    userpage.tviits.map(tviit => tviit.id).includes(activeUser.tviitDeleted)) {\n\n    const filteredTviits = userpage.tviits.filter(tviit => tviit.id !== activeUser.tviitDeleted)\n    setUserpage({ ...userpage, tviits: filteredTviits })\n  }\n\n  const handleTviiting = async (event) => {\n    event.preventDefault()\n    const content = event.target.elements.tviitingTextArea.value\n    event.target.elements.tviitingTextArea.value = ''\n    const tviitToPost = { content }\n\n    if (content.length > 0) {\n      try {\n        const tviit = await tviitService.postTviit(tviitToPost, activeUser.token)\n        const tviitToAdd = { ...tviit, username: activeUser.username, name: activeUser.name }\n        const newUserpage = { ...userpage, tviits: [tviitToAdd].concat(userpage.tviits) }\n        setUserpage(newUserpage)\n        setTviitingFailed(null)\n      } catch (exception) {\n        const response = exception.response\n        const errorReason = response ? response.data.error : null\n        const statusCode = response ? response.status : null\n        setTviitingFailed({ error: true, statusCode, errorReason })\n      }\n    }\n  }\n\n  const postTviitForm = () => {\n    return (\n      <div>\n        <hr />\n        <Form onSubmit={handleTviiting}>\n          <Form.Group controlId=\"tviitingTextArea\">\n            <Form.Label>Tviit</Form.Label>\n            <Form.Control as=\"textarea\" rows={3} />\n          </Form.Group>\n          <Button variant=\"primary\" type=\"submit\">\n            Post\n          </Button>\n        </Form>\n      </div>\n    )\n  }\n\n  return (\n    <>\n      <Container fluid>\n        <Row className=\"d-flex align-items-center justify-content-between\">\n          <Col></Col>\n          <Col xs=\"auto\">\n            <Row>\n              <Col xs=\"auto\" className=\"pl-0 pr-2\">\n                <Avatar userId={userpage.userId} size={72} />\n              </Col>\n              <Col xs=\"auto\">\n                <Row><strong><h4>{userpage.name}</h4></strong></Row>\n                <Row><strong><h4>@{userpage.username}</h4></strong></Row>\n              </Col>\n            </Row>\n          </Col>\n          <Col></Col>\n        </Row>\n      </Container>\n      <Container fluid>\n        <Row>\n          <Col className=\"d-flex justify-content-center\">\n            <strong>\n              <h4>\n                <small className=\"text-muted\">\n                  {userpage.bio}\n                </small>\n              </h4>\n            </strong>\n          </Col>\n        </Row>\n      </Container>\n\n      {activeUser.username === username &&\n        postTviitForm()\n      }\n      {tviitingFailed && <>\n        < br />\n        <Alert variant=\"danger\">\n          Error while posting tviit, ErrorReason: {tviitingFailed.errorReason} (StatusCode: {tviitingFailed.statusCode})\n        </Alert>\n      </>\n      }\n      <hr />\n      <div>\n        <div>\n          {userpage.tviits.map(tviit =>\n            <Tviit\n              key={tviit.id}\n              tviit={tviit}\n            />\n          )}\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Userpage","import React, { useState } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Form, Button, Container, Col, Row, Alert, Spinner } from 'react-bootstrap'\n\nimport { setActiveUser } from '../reducers/activeUserReducer'\n\nimport loginService from '../services/login'\nimport actionService from '../services/actions'\n\nconst Login = () => {\n  const dispatch = useDispatch()\n  const activeUser = useSelector(state => state.activeUser)\n\n  const [isLoggingIn, setLoggingIn] = useState(false)\n  const [showLoginFail, setShowLoginFail] = useState(false)\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    setLoggingIn(true)\n    const username = event.target.elements.formUsername.value\n    const password = event.target.elements.formPassword.value\n    event.target.elements.formUsername.value = ''\n    event.target.elements.formPassword.value = ''\n\n    try {\n      const credentials = { username, password }\n      const user = await loginService.login(credentials)\n      window.localStorage.setItem(\n        'loggedTviitteriUser', JSON.stringify(user)\n      )\n      const actions = await actionService.getAll(user.token)\n      dispatch(setActiveUser({ ...user, ...actions }))\n    } catch (exception) {\n      setLoggingIn(false)\n      setShowLoginFail(true)\n    }\n  }\n\n  if (activeUser.token) {\n    return <Redirect to=\"/\" />\n  }\n\n  return (\n    <Container>\n      <Row className=\"justify-content-md-center\">\n        <Col></Col>\n\n        <Col sm={9} md={6}>\n          <Form onSubmit={handleLogin}>\n            <Form.Group controlId=\"formUsername\">\n              <Form.Label>Username</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"Username\" />\n            </Form.Group>\n\n            <Form.Group controlId=\"formPassword\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control type=\"password\" placeholder=\"Password\" />\n            </Form.Group>\n\n            <div className=\"d-flex justify-content-center\">\n              {!isLoggingIn &&\n                <Button variant=\"primary\" type=\"submit\">\n                  Submit\n                </Button>\n              }\n\n              {isLoggingIn &&\n                <Button variant=\"primary\" disabled>\n                  <Spinner\n                    as=\"span\"\n                    animation=\"border\"\n                    size=\"sm\"\n                    role=\"status\"\n                    aria-hidden=\"true\"\n                  />\n                  <span className=\"sr-only\">Loading...</span>\n                </Button>\n              }\n            </div>\n          </Form>\n          <br />\n          {showLoginFail &&\n            <Alert variant=\"danger\">\n              Wrong username or password!\n            </Alert>\n          }\n        </Col>\n\n        <Col></Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default Login","import axios from 'axios'\n\nconst baseUrl = `${process.env.REACT_APP_SERVER_URL}/api/search`\n\nconst getSearchResults = async (queryString) => {\n  const response = await axios.get(`${baseUrl}?q=${encodeURIComponent(queryString)}`)\n  return response.data\n}\n\nconst searchService = {\n  getSearchResults\n}\n\nexport default searchService","import React, { useState, useEffect } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { Spinner, Alert } from 'react-bootstrap'\n\nimport searchService from '../services/search'\n\nimport Tviit from './Tviit'\n\nconst SearchResults = () => {\n  const queryString = new URLSearchParams(useLocation().search).get('q')\n  const [searchResults, setSearchResults] = useState(null)\n\n  useEffect(() => {\n    const handleSearching = async () => {\n      try {\n        const tviits = await searchService.getSearchResults(queryString)\n        setSearchResults(tviits)\n      } catch (exception) {\n        const response = exception.response\n        const errorReason = response.data ? response.data.error : null\n        const statusCode = response ? response.status : null\n        setSearchResults({ error: true, statusCode, errorReason })\n      }\n    }\n    handleSearching()\n  }, [queryString])\n\n  if (!searchResults) return (\n    <div className=\"text-center\">\n      <Spinner animation=\"border\" variant=\"primary\" />\n    </div>\n  )\n\n  if (searchResults.error) {\n    return (\n      <Alert variant=\"danger\">\n        Error while fetching search results, ErrorReason: {searchResults.errorReason} (StatusCode: {searchResults.statusCode})\n      </Alert>\n    )\n  }\n\n  if (searchResults.length === 0) {\n    return (\n      <Alert variant=\"warning\">\n        No results found\n      </Alert>\n    )\n  }\n\n  return (\n    <div>\n      <h2>Search results:</h2>\n      {searchResults.map(tviit =>\n        <Tviit\n          key={tviit.id}\n          tviit={tviit}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default SearchResults","import React, { useState } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Form, Button, Container, Col, Row, Alert, Spinner } from 'react-bootstrap'\n\nimport loginService from '../services/login'\nimport userService from '../services/users'\n\nimport { setActiveUser } from '../reducers/activeUserReducer'\n\nconst SignUpPage = () => {\n  const dispatch = useDispatch()\n  const activeUser = useSelector(state => state.activeUser)\n\n  const [isSigningUp, setSigningUp] = useState(false)\n  const [signUpFailed, setSignUpFailed] = useState(null)\n\n  const handleSignUp = async (event) => {\n    event.preventDefault()\n    setSigningUp(true)\n    const username = event.target.elements.formUsername.value\n    const name = event.target.elements.formName.value\n    const password = event.target.elements.formPassword.value\n    const passwordVerify = event.target.elements.formPasswordVerify.value\n    // event.target.elements.formUsername.value = ''\n    // event.target.elements.formName.value = ''\n    // event.target.elements.formPassword.value = ''\n    // event.target.elements.formPassword.value = ''\n\n    if (password !== passwordVerify) {\n      setSignUpFailed({ error: true, statusCode: 400, errorReason: 'password fields don\\'t match' })\n      setSigningUp(false)\n    } else {\n      try {\n        const userInfo = { username, name, password }\n        const createdUser = await userService.signUp(userInfo)\n        const credentials = { username: createdUser.username, password }\n        const user = await loginService.login(credentials)\n        window.localStorage.setItem(\n          'loggedTviitteriUser', JSON.stringify(user)\n        )\n        dispatch(setActiveUser(user))\n      } catch (exception) {\n        const response = exception.response\n        const errorReason = response ? response.data.error : null\n        const statusCode = response ? response.status : null\n        setSignUpFailed({ error: true, statusCode, errorReason })\n        setSigningUp(false)\n      }\n    }\n  }\n\n  if (activeUser.token) {\n    return <Redirect to={`/u/${activeUser.username}`} />\n  }\n\n  return (\n    <Container>\n      <Row>\n        <Col></Col>\n\n        <Col sm={9} md={6}>\n          <Form onSubmit={handleSignUp}>\n            <Form.Group controlId=\"formUsername\">\n              <Form.Label>Username</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"Username\" />\n            </Form.Group>\n\n            <Form.Group controlId=\"formName\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"Name\" />\n            </Form.Group>\n\n            <Form.Group controlId=\"formPassword\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control type=\"password\" placeholder=\"Password\" />\n            </Form.Group>\n\n            <Form.Group controlId=\"formPasswordVerify\">\n              <Form.Label>Password again</Form.Label>\n              <Form.Control type=\"password\" placeholder=\"Password\" />\n            </Form.Group>\n\n            <div className=\"d-flex justify-content-center\">\n              {!isSigningUp &&\n                <Button variant=\"primary\" type=\"submit\">\n                  Submit\n                </Button>\n              }\n\n              {isSigningUp &&\n                <Button variant=\"primary\" disabled>\n                  <Spinner\n                    as=\"span\"\n                    animation=\"border\"\n                    size=\"sm\"\n                    role=\"status\"\n                    aria-hidden=\"true\"\n                  />\n                  <span className=\"sr-only\">Loading...</span>\n                </Button>\n              }\n            </div>\n\n          </Form>\n          <br />\n          {signUpFailed &&\n            <Alert variant=\"danger\">\n              Error while signing up, ErrorReason: {signUpFailed.errorReason} (StatusCode: {signUpFailed.statusCode})\n            </Alert>\n          }\n        </Col>\n\n        <Col></Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default SignUpPage","import axios from 'axios'\n\nconst baseUrl = `${process.env.REACT_APP_SERVER_URL}/api/upload`\n\nconst postAvatar = async (avatarFile, token) => {\n  let formData = new FormData()\n  formData.append('avatar', avatarFile)\n  const config = {\n    headers: { 'Content-Type': 'multipart/form-data', 'Authorization': `bearer ${token}` }\n  }\n\n  const response = await axios.post(`${baseUrl}/avatar`, formData, config)\n  return response.data\n}\n\nconst uploadService = {\n  postAvatar\n}\n\nexport default uploadService","import React, { useState } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport { Form, Button, Accordion, Card, Alert, Spinner } from 'react-bootstrap'\n\nimport userService from '../services/users'\nimport uploadService from '../services/upload'\n\nconst UserSettingsPage = () => {\n  const activeUser = useSelector(state => state.activeUser)\n\n  const [isChanging, setChanging] = useState(false)\n  const [changeFailed, setChangeFailed] = useState(null)\n  const [selectedFiles, setSelectedFiles] = useState([])\n\n  const handlePasswordChanging = async (event) => {\n    event.preventDefault()\n    setChanging(true)\n    const oldPassword = event.target.elements.formOldPassword.value\n    const newPassword = event.target.elements.formNewPassword.value\n    const newPasswordVerify = event.target.elements.formNewPasswordVerify.value\n    event.target.elements.formOldPassword.value = ''\n    event.target.elements.formNewPassword.value = ''\n    event.target.elements.formNewPasswordVerify.value = ''\n    if (newPassword === newPasswordVerify) {\n      try {\n        const userModInfo = { oldPassword, newPassword }\n        await userService.modifyUserInfo(userModInfo, activeUser.userId, activeUser.token)\n        setChangeFailed(null)\n        setChanging(false)\n      } catch (exception) {\n        const response = exception.response\n        const errorReason = response ? response.data.error : null\n        const statusCode = response ? response.status : null\n        setChangeFailed({ error: true, statusCode, errorReason })\n        setChanging(false)\n      }\n    } else {\n      const errorReason = 'new password fields are not equal'\n      const statusCode = 400\n      setChangeFailed({ error: true, statusCode, errorReason })\n      setChanging(false)\n    }\n  }\n\n  const handleNameChanging = async (event) => {\n    event.preventDefault()\n    setChanging(true)\n    const newName = event.target.elements.formNewName.value\n    event.target.elements.formNewName.value = ''\n    try {\n      const userModInfo = { name: newName }\n      await userService.modifyUserInfo(userModInfo, activeUser.userId, activeUser.token)\n      setChangeFailed(null)\n      setChanging(false)\n    } catch (exception) {\n      const response = exception.response\n      const errorReason = response ? response.data.error : null\n      const statusCode = response ? response.status : null\n      setChangeFailed({ error: true, statusCode, errorReason })\n      setChanging(false)\n    }\n  }\n\n  const handleBioChanging = async (event) => {\n    event.preventDefault()\n    setChanging(true)\n    const newBio = event.target.elements.formNewBio.value\n    event.target.elements.formNewBio.value = ''\n    try {\n      const userModInfo = { bio: newBio }\n      await userService.modifyUserInfo(userModInfo, activeUser.userId, activeUser.token)\n      setChangeFailed(null)\n      setChanging(false)\n    } catch (exception) {\n      const response = exception.response\n      const errorReason = response ? response.data.error : null\n      const statusCode = response ? response.status : null\n      setChangeFailed({ error: true, statusCode, errorReason })\n      setChanging(false)\n    }\n  }\n\n  const handleAvatarChanging = async (event) => {\n    event.preventDefault()\n    setChanging(true)\n    const newAvatar = selectedFiles[0]\n    try {\n      await uploadService.postAvatar(newAvatar, activeUser.token)\n      setChangeFailed(null)\n      setChanging(false)\n    } catch (exception) {\n      const response = exception.response\n      const errorReason = response ? response.data.error : null\n      const statusCode = response ? response.status : null\n      setChangeFailed({ error: true, statusCode, errorReason })\n      setChanging(false)\n    }\n  }\n\n  if (!activeUser.token) {\n    return <Redirect to=\"/\" />\n  }\n\n  return (\n    <>\n      <h2>Settings</h2>\n      {changeFailed && <>\n        <Alert variant=\"danger\">\n          ErrorReason: {changeFailed.errorReason} (StatusCode: {changeFailed.statusCode})\n        </Alert>\n        < br />\n      </>\n      }\n\n      <Accordion defaultActiveKey=\"0\">\n        <Card>\n          <Card.Header>\n            <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n              Change name\n            </Accordion.Toggle>\n          </Card.Header>\n          <Accordion.Collapse eventKey=\"0\">\n            <Card.Body>\n\n              <Form onSubmit={handleNameChanging}>\n                <Form.Group controlId=\"formNewName\">\n                  <Form.Label>New name</Form.Label>\n                  <Form.Control type=\"text\" placeholder=\"New name\" />\n                </Form.Group>\n\n                <div className=\"d-flex justify-content-center\">\n                  {!isChanging &&\n                    <Button variant=\"primary\" type=\"submit\">\n                      Submit\n                    </Button>\n                  }\n\n                  {isChanging &&\n                    <Button variant=\"primary\" disabled>\n                      <Spinner\n                        as=\"span\"\n                        animation=\"border\"\n                        size=\"sm\"\n                        role=\"status\"\n                        aria-hidden=\"true\"\n                      />\n                      <span className=\"sr-only\">Loading...</span>\n                    </Button>\n                  }\n                </div>\n              </Form>\n\n            </Card.Body>\n          </Accordion.Collapse>\n        </Card>\n        <Card>\n          <Card.Header>\n            <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\n              Change bio\n            </Accordion.Toggle>\n          </Card.Header>\n          <Accordion.Collapse eventKey=\"1\">\n            <Card.Body>\n\n              <Form onSubmit={handleBioChanging}>\n                <Form.Group controlId=\"formNewBio\">\n                  <Form.Label>New bio</Form.Label>\n                  <Form.Control type=\"text\" placeholder=\"New bio\" />\n                </Form.Group>\n\n                <div className=\"d-flex justify-content-center\">\n                  {!isChanging &&\n                    <Button variant=\"primary\" type=\"submit\">\n                      Submit\n                    </Button>\n                  }\n\n                  {isChanging &&\n                    <Button variant=\"primary\" disabled>\n                      <Spinner\n                        as=\"span\"\n                        animation=\"border\"\n                        size=\"sm\"\n                        role=\"status\"\n                        aria-hidden=\"true\"\n                      />\n                      <span className=\"sr-only\">Loading...</span>\n                    </Button>\n                  }\n                </div>\n              </Form>\n\n            </Card.Body>\n          </Accordion.Collapse>\n        </Card>\n        <Card>\n          <Card.Header>\n            <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"2\">\n              Change password\n            </Accordion.Toggle>\n          </Card.Header>\n          <Accordion.Collapse eventKey=\"2\">\n            <Card.Body>\n\n              <Form onSubmit={handlePasswordChanging}>\n                <Form.Group controlId=\"formOldPassword\">\n                  <Form.Label>Current password</Form.Label>\n                  <Form.Control type=\"password\" placeholder=\"Current password\" />\n                </Form.Group>\n\n                <Form.Group controlId=\"formNewPassword\">\n                  <Form.Label>New password</Form.Label>\n                  <Form.Control type=\"password\" placeholder=\"New password\" />\n                </Form.Group>\n\n                <Form.Group controlId=\"formNewPasswordVerify\">\n                  <Form.Label>New password again</Form.Label>\n                  <Form.Control type=\"password\" placeholder=\"New password again\" />\n                </Form.Group>\n\n                <div className=\"d-flex justify-content-center\">\n                  {!isChanging &&\n                    <Button variant=\"primary\" type=\"submit\">\n                      Submit\n                    </Button>\n                  }\n\n                  {isChanging &&\n                    <Button variant=\"primary\" disabled>\n                      <Spinner\n                        as=\"span\"\n                        animation=\"border\"\n                        size=\"sm\"\n                        role=\"status\"\n                        aria-hidden=\"true\"\n                      />\n                      <span className=\"sr-only\">Loading...</span>\n                    </Button>\n                  }\n                </div>\n              </Form>\n\n            </Card.Body>\n          </Accordion.Collapse>\n        </Card>\n        <Card>\n          <Card.Header>\n            <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"3\">\n              Change avatar\n            </Accordion.Toggle>\n          </Card.Header>\n          <Accordion.Collapse eventKey=\"3\">\n            <Card.Body>\n\n              <Form encType='multipart/form-data' onSubmit={handleAvatarChanging}>\n                <Form.Group controlId=\"formNewAvatar\">\n                  <Form.File\n                    id=\"avatar\"\n                    label=\"New avatar\"\n                    onChange={e => {\n                      setSelectedFiles(e.target.files)\n                    }}\n                  />\n                </Form.Group>\n\n                <div className=\"d-flex justify-content-center\">\n                  {!isChanging &&\n                    <Button variant=\"primary\" type=\"submit\">\n                      Submit\n                    </Button>\n                  }\n\n                  {isChanging &&\n                    <Button variant=\"primary\" disabled>\n                      <Spinner\n                        as=\"span\"\n                        animation=\"border\"\n                        size=\"sm\"\n                        role=\"status\"\n                        aria-hidden=\"true\"\n                      />\n                      <span className=\"sr-only\">Loading...</span>\n                    </Button>\n                  }\n                </div>\n              </Form>\n\n            </Card.Body>\n          </Accordion.Collapse>\n        </Card>\n      </Accordion>\n    </>\n  )\n}\n\nexport default UserSettingsPage","import React from 'react'\n\nconst NotFound = () => (\n  <div>\n    <h1>404 - Not Found!</h1>\n  </div>\n)\n\nexport default NotFound","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Switch, Route, useHistory, withRouter } from 'react-router-dom'\nimport { Container, Navbar, Nav, NavDropdown, Form, FormControl, Button, Jumbotron } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { ChatQuoteFill } from 'react-bootstrap-icons'\n\nimport { setActiveUser } from './reducers/activeUserReducer'\n\nimport actionService from './services/actions'\n\nimport Feed from './components/Feed'\nimport Userpage from './components/Userpage'\nimport Login from './components/Login'\nimport SearchResults from './components/SearchResults'\nimport SignUpPage from './components/SignUpPage'\nimport UserSettingsPage from './components/UserSettingsPage'\nimport NotFound from './components/NotFound'\n\nconst App = () => {\n  const dispatch = useDispatch()\n  const activeUser = useSelector(state => state.activeUser)\n  const history = useHistory()\n\n  useEffect(() => {\n    const handleCheckingLocalStorage = async () => {\n      const loggedUserJSON = window.localStorage.getItem('loggedTviitteriUser')\n      if (loggedUserJSON) {\n        const user = JSON.parse(loggedUserJSON)\n        const actions = await actionService.getAll(user.token)\n        dispatch(setActiveUser({ ...user, ...actions }))\n      }\n    }\n    handleCheckingLocalStorage()\n  }, [dispatch])\n\n  const handleSearch = (event) => {\n    event.preventDefault()\n    const searchString = event.target.elements.formNavBarSearch.value\n    event.target.elements.formNavBarSearch.value = ''\n\n    if (searchString !== '') {\n      history.push(`/search?q=${encodeURIComponent(searchString)}`)\n    }\n  }\n\n  const handleSelect = (event) => {\n    if (event === 'login') {\n      history.push('/login')\n    } else if (event === 'sign-up') {\n      history.push('/sign-up')\n    } else if (event === 'my-page') {\n      history.push(`/u/${activeUser.username}`)\n    }else if (event === 'settings') {\n      history.push('/settings')\n    } else if (event === 'logout') {\n      dispatch(setActiveUser({}))\n      window.localStorage.clear()\n      history.push('/')\n    }\n  }\n\n  return (\n    <>\n      <Navbar collapseOnSelect expand=\"md\" bg=\"primary\" variant=\"dark\">\n\n        <LinkContainer to=\"/\">\n          <ChatQuoteFill className=\"align-top\" size={40} color=\"#f8f9fa\" />\n        </LinkContainer>\n\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"mr-auto\">\n\n            <LinkContainer to=\"/\">\n              <Nav.Link href=\"#\">Home</Nav.Link>\n            </LinkContainer>\n\n          </Nav>\n\n          <Nav>\n            {!activeUser.token &&\n              <NavDropdown onSelect={handleSelect} title={'Login / Sign up'} id=\"basic-nav-dropdown\">\n                <NavDropdown.Item eventKey=\"login\">Login</NavDropdown.Item>\n                <NavDropdown.Divider />\n                <NavDropdown.Item eventKey=\"sign-up\">Sign up</NavDropdown.Item>\n              </NavDropdown>\n            }\n\n            {activeUser.token &&\n              <NavDropdown onSelect={handleSelect} title={`@${activeUser.username}`} id=\"basic-nav-dropdown\">\n                <NavDropdown.Item eventKey=\"my-page\">My page</NavDropdown.Item>\n                <NavDropdown.Divider />\n                <NavDropdown.Item eventKey=\"settings\">Settings</NavDropdown.Item>\n                <NavDropdown.Divider />\n                <NavDropdown.Item eventKey=\"logout\">Logout</NavDropdown.Item>\n              </NavDropdown>\n            }\n          </Nav>\n\n          <Form inline onSubmit={handleSearch}>\n            <Form.Group controlId=\"formNavBarSearch\">\n              <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n              <Button variant=\"outline-light\" type=\"submit\">Search</Button>\n            </Form.Group>\n          </Form>\n        </Navbar.Collapse>\n      </Navbar>\n\n      <Container>\n\n        <br />\n\n        <Switch>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/sign-up\">\n            <SignUpPage />\n          </Route>\n          <Route path=\"/u/:username\">\n            <Userpage />\n          </Route>\n          <Route path=\"/settings\">\n            <UserSettingsPage />\n          </Route>\n          <Route path=\"/search\">\n            <SearchResults />\n          </Route>\n          <Route exact path=\"/\">\n            <Jumbotron>\n              <h1>Hello and welcome to Tviitteri!</h1>\n              <p>\n                Tviitteri is a simple microblog service built with React.js, Node.js, Express.js and it uses a SQLite database.\n              </p>\n            </Jumbotron>\n            <hr />\n            <Feed />\n          </Route>\n          <Route component={NotFound} />\n        </Switch>\n\n        <hr />\n        <div className=\"text-center\">\n          <i>Tviitteri, {new Date().getFullYear()}</i>\n        </div>\n\n      </Container>\n    </>\n  )\n}\n\nexport default withRouter(App)","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport App from './App'\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}